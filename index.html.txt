import { useState } from 'react';
import { Download, MonitorPlay } from 'lucide-react';

// The main App component
export default function App() {
  const [videoUrl, setVideoUrl] = useState('');
  const [isDownloading, setIsDownloading] = useState(false);
  const [progress, setProgress] = useState(0);

  // Function to handle the download button click
  const handleDownload = () => {
    // Check if the URL is valid
    if (!videoUrl.trim()) return;

    setIsDownloading(true);
    setProgress(0);

    // Simulate the download process
    let currentProgress = 0;
    const downloadInterval = setInterval(() => {
      currentProgress += Math.random() * 10;
      if (currentProgress >= 100) {
        currentProgress = 100;
        clearInterval(downloadInterval);
        
        // Open the URL in a new tab to trigger download
        window.open(videoUrl, '_blank');

        // Reset the state after a delay
        setTimeout(() => {
          setIsDownloading(false);
          setVideoUrl('');
          setProgress(0);
        }, 2000);
      }
      setProgress(Math.floor(currentProgress));
    }, 500);
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 p-4">
      {/* Main Container */}
      <div className="w-full max-w-md mx-auto bg-white rounded-xl shadow-lg p-8 transition-transform duration-500 hover:scale-105">
        <div className="text-center">
          {/* Header and Description */}
          <MonitorPlay className="w-16 h-16 mx-auto text-blue-600 mb-4" />
          <h1 className="text-3xl font-bold text-gray-800 mb-2">ดาวน์โหลดวิดีโอ</h1>
          <p className="text-gray-500 mb-6">
            วางลิงก์วิดีโอที่ต้องการดาวน์โหลดในช่องด้านล่าง
          </p>
        </div>

        {/* Input field for video link */}
        <div className="mb-4">
          <input
            type="text"
            id="video-link-input"
            className="w-full p-3 border-2 border-gray-300 rounded-lg text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-300"
            placeholder="วางลิงก์วิดีโอที่นี่..."
            value={videoUrl}
            onChange={(e) => setVideoUrl(e.target.value)}
            disabled={isDownloading}
          />
        </div>

        {/* Download Button */}
        {!isDownloading ? (
          <button
            id="download-button"
            className="w-full flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-300 disabled:bg-blue-400"
            onClick={handleDownload}
            disabled={!videoUrl.trim()}
          >
            <Download className="mr-2" />
            ดาวน์โหลด
          </button>
        ) : (
          /* Download Status Section */
          <div id="download-status-container" className="mt-6">
            <div id="download-message" className="text-center text-sm font-medium text-gray-600 mb-2">
              กำลังดาวน์โหลด... ({progress}%)
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2.5">
              <div
                id="progress-bar"
                className="progress-bar bg-green-500 h-2.5 rounded-full"
                style={{ width: `${progress}%` }}
              ></div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
